import discord
from discord import app_commands
from discord.ext import commands
import wavelink
import os
from dotenv import load_dotenv

# Carregar vari√°veis do .env
load_dotenv()
TOKEN = os.getenv("DISCORD_TOKEN")

# Configura√ß√£o do bot
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)

# Evento quando o bot est√° pronto
@bot.event
async def on_ready():
    print(f"üéµ Bot de M√∫sica {bot.user} est√° online!")
    try:
        await bot.tree.sync()  # Sincronizar comandos Slash
        print("‚úÖ Comandos Slash sincronizados!")
    except Exception as e:
        print(f"Erro ao sincronizar comandos: {e}")
    
    bot.loop.create_task(connect_lavalink())

# Conectar ao servidor Lavalink p√∫blico (Corre√ß√£o aplicada)
async def connect_lavalink():
    node = wavelink.Node(uri="https://lavalink.voidnodes.com", password="youshallnotpass")
    await wavelink.Pool.connect(client=bot, nodes=[node])

# üéµ Comando Slash para tocar m√∫sica
@bot.tree.command(name="play", description="Toca uma m√∫sica do YouTube ou Spotify.")
async def play(interaction: discord.Interaction, search: str):
    user = interaction.user
    if not user.voice:
        await interaction.response.send_message("‚ùå Voc√™ precisa estar em um canal de voz para usar este comando.", ephemeral=True)
        return

    if not interaction.guild.voice_client:
        vc: wavelink.Player = await user.voice.channel.connect(cls=wavelink.Player)
    else:
        vc: wavelink.Player = interaction.guild.voice_client

    track = await wavelink.YouTubeTrack.search(query=search, return_first=True)
    
    if not track:
        await interaction.response.send_message("‚ùå Nenhuma m√∫sica encontrada.", ephemeral=True)
        return

    if vc.is_playing():
        vc.queue.put(track)
        await interaction.response.send_message(f"üì• **{track.title}** foi adicionado √† fila!")
    else:
        await vc.play(track)
        await interaction.response.send_message(f"üé∂ **Tocando agora:** {track.title}")

# ‚è∏Ô∏è Comando Slash para pausar m√∫sica
@bot.tree.command(name="pause", description="Pausa a m√∫sica atual.")
async def pause(interaction: discord.Interaction):
    vc: wavelink.Player = interaction.guild.voice_client
    if vc and vc.is_playing():
        await vc.pause()
        await interaction.response.send_message("‚è∏ M√∫sica pausada.")
    else:
        await interaction.response.send_message("‚ùå N√£o h√° m√∫sica tocando no momento.", ephemeral=True)

# ‚ñ∂Ô∏è Comando Slash para retomar m√∫sica
@bot.tree.command(name="resume", description="Retoma a m√∫sica pausada.")
async def resume(interaction: discord.Interaction):
    vc: wavelink.Player = interaction.guild.voice_client
    if vc and vc.is_paused():
        await vc.resume()
        await interaction.response.send_message("‚ñ∂ M√∫sica retomada.")
    else:
        await interaction.response.send_message("‚ùå Nenhuma m√∫sica pausada para retomar.", ephemeral=True)

# ‚è≠Ô∏è Comando Slash para pular m√∫sica
@bot.tree.command(name="skip", description="Pula para a pr√≥xima m√∫sica na fila.")
async def skip(interaction: discord.Interaction):
    vc: wavelink.Player = interaction.guild.voice_client
    if vc and vc.is_playing():
        await vc.stop()
        await interaction.response.send_message("‚è≠ M√∫sica pulada.")
    else:
        await interaction.response.send_message("‚ùå N√£o h√° m√∫sica tocando para pular.", ephemeral=True)

# ‚èπÔ∏è Comando Slash para parar m√∫sica e sair do canal
@bot.tree.command(name="stop", description="Para a m√∫sica e remove o bot do canal de voz.")
async def stop(interaction: discord.Interaction):
    vc: wavelink.Player = interaction.guild.voice_client
    if vc:
        await vc.disconnect()
        await interaction.response.send_message("üëã Sai do canal de voz.")
    else:
        await interaction.response.send_message("‚ùå N√£o estou conectado a um canal de voz.", ephemeral=True)

# üé∂ Comando Slash para mostrar a fila de m√∫sicas
@bot.tree.command(name="queue", description="Mostra as m√∫sicas na fila.")
async def queue(interaction: discord.Interaction):
    vc: wavelink.Player = interaction.guild.voice_client
    if not vc or vc.queue.is_empty:
        await interaction.response.send_message("‚ùå A fila est√° vazia.", ephemeral=True)
        return

    queue_list = "\n".join([f"{i+1}. {track.title}" for i, track in enumerate(vc.queue)])
    await interaction.response.send_message(f"üéµ **Fila de m√∫sicas:**\n{queue_list}")

# Rodar o bot
bot.run(TOKEN)